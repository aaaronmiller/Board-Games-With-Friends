{"version":3,"sources":["components/Navbar.js","utils/API.js","components/Login.js","components/SignUp.js","components/CreateModal.js","components/GameCard.js","components/eventload.js","components/DashBoard.js","components/GamePanel.js","components/GameModal.js","components/FindGame.js","components/NewsCard.js","components/News.js","components/GameTag.js","components/UpdateProfileModal.js","components/Profile.js","components/test.js","components/test2.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","isOpen","state","logOut","sessionStorage","clear","handleLogOut","isLoggedIn","react_default","a","createElement","mdbreact_esm","to","onClick","color","dark","expand","react_media","query","matches","react_router_dom","className","src","alt","id","navbar","right","active","Component","url","API","getAllEvents","axios","get","getEvents","getEvent","eventId","deleteEvent","delete","saveEvent","eventData","post","updateEvent","put","getUsers","getUser","userId","addUser","userData","logIn","username","password","userName","signUp","joinEvent","token","getPlayers","scrape","getNews","deleteNews","newsId","getGames","saveGame","deleteGame","gameId","updateGame","gameData","updateProfile","profileObj","getProfile","Login","redirectPath","usernameHandler","bind","assertThisInitialized","passwordHandler","handleSubmit","renderRedirect","console","log","event","target","value","_this2","then","response","data","setItem","handleLogIn","alert","catch","error","sm","style","margin","backgroundImage","backgroundSize","width","align","borderRadius","filter","whiteSpace","href","label","group","icon","type","validate","onChange","rounded","md","react_router","React","SignUp","CreateModal","handleInputChange","_event$target","name","defineProperty","handleCreate","modal1","eventTitle","gameName","description","location","maxPlayers","dateTime","gpsLocation","window","reload","toggle","nr","modalNumber","display","size","textAlign","hint","GameCard","loadEvents","res","gameObj","err","loadEventsNplayers","joinedPlayers","listPlayers","join","getItem","toString","Eventload","loadRegistedGames","Response","grabbedGames","gorm","isOwner","hostedGames","defaultGame","capacity","lib_default","assign","dots","infinite","speed","slidesToShow","slidesToScroll","slidePerRow","centerMode","map","components_GameCard","key","DashBoard","_ref","components_CreateModal","eventload_Eventload","GamePanel","gameTitle","fontSize","image","height","GameModal","number","picture","gameDescript","maxOfPlayers","material","containerClassName","prepend","FindGame","componentDidMount","loadGamesToPlay","gamesToPlay","components_GameModal","textgAlign","components_GamePanel","timesPlayed","totalTimesPlayed","NewsCard","link","waves","summary","loadNewsArticles","newsArticles","handlesubmit","components_NewsCard","title","GameTag","removable","index","pill","UpdateProfileModal","favorite","gameArr","modalToggle","mod","selectGender","gender","deleteTag","tempArr","splice","addGame","gameItem","push","handleUpdate","userImage","userGender","userIntro","introduction","favoriteGames","JSON","stringify","update","updateModal","element","GameTag_GameTag","Profile","updateProfileState","parse","loadProfile","UpdateProfileModal_UpdateProfileModal","SimpleSlider","SimpleSlider2","App","basename","process","components_Navbar","exact","path","render","components_Login","components_SignUp","component","Dashboard","News","Test","Test2","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7b5b83ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse } from \"mdbreact\";\nimport Media from 'react-media';\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false\n        };\n    }\n    toggleCollapse = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n    logOut = () => {\n        sessionStorage.clear();\n        this.props.handleLogOut();\n    }\n    isLoggedIn = () => {\n        if (this.props.isLoggedIn) {\n            return (\n                <MDBNavItem>\n                    <MDBNavLink to=\"/\" onClick={this.logOut}>\n                        Log Out\n                    </MDBNavLink>\n                </MDBNavItem>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <MDBNavbar color=\"#283593 indigo darken-3\" dark expand=\"md\">\n                    <MDBNavbarBrand>\n                     <Media query=\"(max-width: 599px)\">\n                     {matches =>\n                      matches ? (\n                        <Link className=\"navbar-brand containerFluid\" to=\"/\">\n                            <img className=\"containerFluid\" src=\"https://i.ibb.co/yF7HS8y/bgwf-small.jpg\" alt=\"Board Games with Friends\" />\n                         </Link>\n                       ) : (\n                            <Link className=\"navbar-brand containerFluid\" to=\"/\">\n                                <img className=\"containerFluid\" src=\"https://i.ibb.co/yXrwR6V/bgwf.jpg\" alt=\"Board Games with Friends\" />\n                            </Link>\n                       ) }\n                        </Media>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\n                    <MDBCollapse id=\"navbarCollapse\" isOpen={this.state.isOpen} navbar>\n                        <MDBNavbarNav right>\n                            <MDBNavItem active>\n                                <MDBNavLink to=\"/\"><i className=\"fas fa-home\"></i>\n                                    Home\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"/dashboard\">\n                                    <i className=\"fas fa-chess-rook\"></i>\n                                    My Game\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"/find-game\">\n                                    <i className=\"fas fa-chess-knight\"></i>\n                                    Find A Game\n                                </MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink to=\"/news\">\n                                    <i className=\"far fa-newspaper\"></i>\n                                    News\n                                 </MDBNavLink>\n                            </MDBNavItem>\n                            {this.props.isLoggedIn &&\n                                <MDBNavItem>\n                                    <MDBNavLink to=\"/profile\">\n                                        <i className=\"far fa-address-card\"></i>\n                                        Profile\n                                    </MDBNavLink>\n                                </MDBNavItem>\n                            }\n                            {/* {this.props.isLoggedIn &&\n                                <MDBNavItem>\n                                    <MDBNavLink to=\"/\" onClick={this.logOut}>\n                                        Log Out\n                                    </MDBNavLink>\n                                </MDBNavItem>\n                            } */}\n                            { this.isLoggedIn() }\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;","import axios from \"axios\";\n\nconst url = \"https://arcane-spire-45572.herokuapp.com\";\n// const url = \"http://localhost:8080\";\n\nexport default {\n  // Event API's  \n\n  // Gets all events\n  getAllEvents: function () {\n    return axios.get(url + \"/api/gameEvents\");\n  },\n\n  // Gets all events created by current user\n  getEvents: function () {\n    return axios.get(url + \"/api/gameEvents\");\n  },\n\n  // Gets the event with the given id\n  getEvent: function (eventId) {\n    return axios.get(url + \"/api/gameEvents/\" + eventId);\n  },\n  // Deletes the event with the given id\n  deleteEvent: function (eventId) {\n    return axios.delete(url + \"/api/gameEvents/\" + eventId);\n  },\n  // Saves an event to the database\n  saveEvent: function (eventData) {\n    return axios.post(url + \"/api/gameEvents\", eventData);\n  },\n  updateEvent: function (eventData) {\n    return axios.put(url + \"/api/gameEvents/\", eventData);\n  },\n\n  // User Profile APIs\n  // Gets all users\n  getUsers: function () {\n    return axios.get(url + \"/api/users\");\n  },\n  // Gets the user with the given id\n  getUser: function (userId) {\n    return axios.get(url + \"/api/users/\" + userId);\n  },\n \n  // Saves a user to the database\n  addUser: function (userData) {\n    return axios.post(url + \"/api/users/\", userData);\n  },\n\n  // Login/SignUp APIs\n  // Login\n  logIn: (username, password) => {\n    return axios.post(url + \"/api/login\", \n    {\n      userName: username,\n      password: password\n    });\n  },\n  signUp: (username, password) => {\n    return axios.post(url + \"/api/createaccount\", \n    {\n      userName: username,\n      password: password\n    });\n  },\n  \n  joinEvent: function (token, eventId) {\n    return axios.post(url + \"/api/users/join/\" + token + \"/\" + eventId);\n  },\n  getPlayers: function (eventId) {\n    return axios.post(url + \"/api/users/join/\"  + eventId);\n  },\n\n\n  scrape: function () {\n    return axios.get(url + \"/api/scrape\");\n  },\n  getNews: function () {\n    return axios.get(url + \"/api/getNews\");\n  },\n  deleteNews: function (newsId) {\n    return axios.delete(url + \"/api/deleteNews/\" + newsId);\n  },\n\n\n  getGames: function () {\n    return axios.get(url + \"/api/getGames\");\n  },\n  saveGame: function (eventData) {\n  return axios.post(url + \"/api/saveGame/\", eventData);\n  },\n  deleteGame: function (gameId) {\n    return axios.delete(url + \"/api/deleteGame/\" +gameId);\n  },\n  updateGame: function (gameId, gameData) {\n    return axios.put(url + \"/api/updateGame/\" + gameId, gameData);\n  },\n  updateProfile: function (userId, profileObj) {\n    return axios.put(url + \"/api/updateProfile/\" + userId, profileObj);\n  },\n  getProfile: function (userId) {\n    return axios.get(url + \"/api/getProfile/\" + userId);\n  }\n};\n","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\nimport { Redirect, Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirectPath: \"/\"\n    };\n\n    this.usernameHandler = this.usernameHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n\n\n  }\n  renderRedirect(){\n    console.log(\"redirect\");\n    this.setState(\n      {\n\n        redirectPath: \"/dashboard\"\n      }\n    )\n  }\n  usernameHandler(event) {\n    this.setState(\n      {\n        username: event.target.value\n      }\n    )\n  }\n  passwordHandler(event) {\n    this.setState(\n      {\n        password: event.target.value\n      }\n    )\n  }\n\n  handleSubmit(event) {\n    API.logIn(this.state.username, this.state.password)\n      .then((response) => {\n        if (!response.data) {\n          alert(\"wrong username or password\")\n        } else {\n          sessionStorage.setItem(\"token\", response.data);\n          sessionStorage.setItem(\"isLoggedIn\", true);\n          sessionStorage.setItem(\"userName\", this.state.username);\n          this.props.handleLogIn();\n          this.renderRedirect();\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n  }\n  render() {\n\n    return (\n      <div>\n        <MDBContainer>\n          <MDBRow>\n            <MDBCol sm=\"3\"></MDBCol>\n            <MDBCol sm=\"6\">\n              <MDBRow style={{ margin: \"auto\" }}>\n                <MDBCard\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage:\n                      \"url(https://render.fineartamerica.com/images/rendered/default/poster/8/10/break/images-medium/chess-white-king-in-check-mate-position-adrian-pope.jpg)\",\n                    backgroundSize: \"100% 100%\",\n                    width: \"28rem\",\n                    align: \"center\",\n                    margin: \"30px\",\n                    borderRadius: \"20px\",\n                    filter: \"drop-shadow(10px 10px 9px #000000)\"\n                  }}>\n                  <div className=\"text-white rgba-stylish-strong py-5 px-5 z-depth-4\" style={{ borderRadius: \"20px\", color: \"white\" }}>\n                    <div className=\"text-center\">\n                      <h3 className=\"text-white mb-5 mt-4 font-weight-bold\" style={{ whiteSpace: \"nowrap\"}}>\n                        <strong>LOG</strong>\n                        <a href=\"#!\" className=\"red-text font-weight-bold\">\n                          <strong>IN</strong>\n                        </a>\n                      </h3>\n                    </div>\n\n                    <MDBInput className=\"text-white\" label=\"Your email\" group icon=\"user\" type=\"text\" validate onChange={this.usernameHandler} />\n                    <MDBInput className=\"text-white\" label=\"Your password\" group icon=\"lock\" type=\"password\" validate onChange={this.passwordHandler} />\n\n                    <MDBRow className=\"d-flex align-items-center mb-4\">\n                      <div className=\"text-center mb-3 col-md-12\">\n                        <MDBBtn\n                          color=\"red\"\n                          rounded\n                          type=\"button\"\n                          className=\"btn-block z-depth-1\"\n                          onClick={this.handleSubmit}\n                          style={{\n                          borderRadius: \"8px\",\n                          filter: \"drop-shadow(10px 10px 9px #000000)\"\n                        }}>\n                          LOG IN\n                    </MDBBtn>\n                        </div>\n                      </MDBRow>\n                  <MDBCol sm=\"12\">\n                    <p className=\"font-small text-white d-flex justify-content-end\">\n                      Don't have an accout?\n                <Link to=\"/signUp\" className=\"red-text ml-1 font-weight-bold\">\n                        Sign Up\n                  </Link>\n                    </p>\n                  </MDBCol>\n                  <MDBCol md=\"12\">\n                      <p className=\"font-small white-text d-flex justify-content-end\">\n                        Forgot\n                  <a href=\"#!\" className=\"red-text ml-1 font-weight-bold\">\n                          Password?\n                  </a>\n                      </p>\n                    </MDBCol>\n                    </div>\n                  </MDBCard>\n                \n\n              </MDBRow>\n            </MDBCol>\n          <MDBCol sm=\"3\"></MDBCol>\n          </MDBRow>\n        <Redirect to={this.state.redirectPath} />\n\n        </MDBContainer>\n      </div >\n    );\n  }\n}\nexport default Login;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\nimport { Redirect, Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nclass SignUp extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      redirectPath: \"/signUp\"\n    };\n\n    this.usernameHandler = this.usernameHandler.bind(this);\n    this.passwordHandler = this.passwordHandler.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderRedirect = this.renderRedirect.bind(this);\n\n\n  }\n\n  renderRedirect() {\n    console.log(\"redirect\");\n    this.setState(\n      {\n\n        redirectPath: \"/dashboard\"\n\n      }\n    )\n  }\n\n  usernameHandler(event) {\n    this.setState(\n      {\n        username: event.target.value\n      }\n    )\n  }\n  passwordHandler(event) {\n    this.setState(\n      {\n        password: event.target.value\n      }\n    )\n  }\n\n  handleSubmit(event) {\n    console.log(this.state.username, this.state.password);\n    API.signUp(this.state.username, this.state.password)\n      .then((response) => {\n        sessionStorage.setItem(\"token\", response.data);\n        sessionStorage.setItem(\"isLoggedIn\", true);\n        console.log(response);\n        alert(\"Thank you, please now login using your chosen username and password.\")\n        this.props.handleLogIn();\n        this.renderRedirect();\n        if (!response.data) {\n          alert(\"wrong username or password\")\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  render() {\n\n    return (\n      <div>\n        <MDBContainer>\n           <MDBRow>\n            <MDBCol sm=\"3\"></MDBCol>\n            <MDBCol sm=\"6\">\n              <MDBRow style={{ margin: \"auto\" }}>\n                <MDBCard\n                  className=\"card-image\"\n                  style={{\n                    backgroundImage:\n                      \"url(https://render.fineartamerica.com/images/rendered/default/poster/8/10/break/images-medium/chess-white-king-in-check-mate-position-adrian-pope.jpg)\",\n                    backgroundSize: \"100% 100%\",\n                    width: \"28rem\",\n                    align: \"center\",\n                    margin: \"30px\",\n                    borderRadius: \"20px\",\n                    filter: \"drop-shadow(10px 10px 9px #000000)\"\n                  }}>\n                  <div className=\"text-white rgba-stylish-strong py-5 px-5 z-depth-4\" style={{ borderRadius: \"20px\", color: \"white\" }}>\n                    <div className=\"text-center\">\n                      <h3 className=\"text-white mb-5 mt-4 font-weight-bold\"  style={{ whiteSpace: \"nowrap\"}}>\n                        <strong>SIGN</strong>\n                        <a href=\"#!\" className=\"#1565c0-text font-weight-bold\">\n                          <strong> UP</strong>\n                        </a>\n                      </h3>\n                    </div>\n\n                    <MDBInput className=\"text-white\" label=\"Your email\" group icon=\"user\" type=\"text\" validate onChange={this.usernameHandler} />\n                    <MDBInput className=\"text-white\" label=\"Your password\" group icon=\"lock\" type=\"password\" validate onChange={this.passwordHandler} />\n\n                    <MDBRow className=\"d-flex align-items-center mb-4\">\n                      <div className=\"text-center mb-3 col-md-12\">\n                        <MDBBtn\n                          color=\"#1565c0 blue darken-3\"\n                          rounded\n                          type=\"button\"\n                          className=\"btn-block z-depth-1\"\n                          onClick={this.handleSubmit}\n                          style={{\n                          borderRadius: \"8px\",\n                          filter: \"drop-shadow(10px 10px 9px #000000)\"\n                        }}>\n                          SIGN UP\n                    </MDBBtn>\n                        </div>\n                      </MDBRow>\n                  <MDBCol sm=\"12\">\n                    <p className=\"font-small text-white d-flex justify-content-end\">\n                      Already have an accout?\n                <Link to=\"/\" className=\"#1565c0-text ml-1 font-weight-bold\">\n                        Log in\n                  </Link>\n                    </p>\n                  </MDBCol>\n                    </div>\n                  </MDBCard>\n                \n\n              </MDBRow>\n            </MDBCol>\n          <MDBCol sm=\"3\"></MDBCol>\n          </MDBRow>\n        <Redirect to={this.state.redirectPath} />\n\n        </MDBContainer>\n      </div >\n    );\n  }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput } from 'mdbreact';\nimport API from '../utils/API';\n// import { number } from 'prop-types';\n\nclass CreateModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            modal1: false,\n            eventTitle: \"\",\n            gameName: \"\",\n            description: \"\",\n            location: \"\",\n            maxPlayers: \"\",\n            dateTime: \"\",\n            gpsLocation: \"\"\n        }\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    handleCreate = () => {\n        this.setState({ modal1: false });\n        API.saveEvent({\n            // token: sessionStorage.getItem(\"token\"),\n            eventTitle: this.state.eventTitle,\n            gameName: this.state.gameName,\n            description: this.state.description,\n            location: this.state.location,\n            maxPlayers: this.state.maxPlayers,\n            dateTime: this.state.dateTime,\n            gpsLocation: this.state.gpsLocation,\n            // enrolledPlayers: \n            // time: this.state.time,\n        })\n            .then((response) => {\n                console.log(\"event created\");\n                console.log(response);\n                window.location.reload();\n            }).catch(function (error) {\n                console.log(error);\n            })\n    }\n\n\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n            [modalNumber]: !this.state[modalNumber]\n        });\n    }\n\n    render() {\n        return (\n            <MDBContainer>\n                <div style={{ display: \"inline-block\" }}>\n\n                    <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.toggle(1)}>Create a Game</MDBBtn>\n\n                    <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} size=\"lg\">\n                        <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={this.toggle(1)}>Create a board game</MDBModalHeader>\n                        <MDBModalBody>\n                            <div className=\"md-form\">\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    hint=\"Event Title\"\n                                    name=\"eventTitle\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    name=\"gameName\"\n                                    hint=\"The Name Of The Boardgame\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    hint=\"Maximum Number of People\"\n                                    name=\"maxPlayers\"\n                                    type=\"number\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    hint=\"Date and start time\"\n                                    name=\"dateTime\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    hint=\"GPSlocation\"\n                                    name=\"gpslocation\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    hint=\"Location\"\n                                    name=\"location\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n\n                                    className=\"mb-2 mt-0\"\n                                    type=\"textarea\"\n                                    hint=\"Extra Information\"\n                                    name=\"description\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                            </div>\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                            <MDBBtn color=\"#01579b light-blue darken-4\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\" }} onClick={this.toggle(1)}>Close</MDBBtn>\n                            <MDBBtn color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\" }} onClick={this.handleCreate}>Create</MDBBtn>\n                        </MDBModalFooter>\n                    </MDBModal>\n                </div>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default CreateModal;","import React, { Component } from \"react\";\nimport { MDBContainer, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\nimport API from '../utils/API';\nimport Slider from \"react-slick\";\n\n// const CardExample = () => {\nclass GameCard extends Component {\n  //   state = {\n  //     isOwner: true, \n  //     isAdmin: true,\n  //   };\n\n  componentDidMount() {\n    this.loadEvents();\n  };\n\n  loadEvents = () => {\n    API.getAllEvents()\n      .then(res =>\n        this.setState({ gameObj: res.data })\n      )\n      .catch(err => console.log(err));\n  };\n\n  loadEventsNplayers = () => {\n    API.getAllEvents()\n      .then(res =>\n        this.setState({ gameObj: res.data })\n        .catch(err => console.log(err))\n        );\n        API.getPlayers(this.state.id)\n          .then(res =>\n            this.setState({ joinedPlayers : res.data})\n            )\n            .catch(err => console.log(err));\n            let joinedPlayers = this.state.joinedPlayers;\n            let listPlayers = joinedPlayers.join(\",\");\n            this.setState({joinedPlayers : listPlayers})\n   }\n\n  deleteEvent = id => {\n    API.deleteEvent(id)\n      .then((response) => {\n        window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      })\n  }\n\n  joinEvent = id => {\n    API.joinEvent(sessionStorage.getItem(\"token\").toString(), id )\n      .then((response) => {\n        console.log(response);\n      });\n  }\n\n\n  render() {\n    return (\n  <div style={{display:\"inline-block\", textAlign:\"center\"}}>\n  \n  \n  <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\", backgroundImage:\n  \"url(https://image.freepik.com/free-vector/stylish-blue-medical-background-with-hexagon_1017-19373.jpg)\"}}>\n  <MDBCardBody>\n  <MDBCardTitle style={{ color: \"black\" }}>{this.props.eventTitle}</MDBCardTitle>\n            <MDBCardText style={{ color: \"white\" }}>\n            {this.props.gameName}<br /><br />\n            <span><p>Location: {this.props.location}</p></span><br />\n              {/* Created by:{CardExample.eventOwner}<br />c */}\n              Date/time:{this.props.dateTime}<br />\n              <span><p>Max Players: {this.props.maxPlayers}</p></span>\n              <span><p>Description: {this.props.description}</p></span>\n              {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              Joined Players: {this.props.listPlayers}\n            </MDBCardText>\n            \n            <MDBBtn color=\"red\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=>this.joinEvent(this.props.id)}>Join</MDBBtn>\n\n            <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\",borderRadius: \"10px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=> this.deleteEvent(this.props.id)} >Delete</MDBBtn>\n            \n            \n            </MDBCardBody>\n            </MDBCard>\n           \n            </div>\n            \n            )\n  }\n\n}\nexport default GameCard;\n\n\n\n// {this.props.isOwner ? (<MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" onClick={this.props.handleDelete}>Delete</MDBBtn>) : (\"\")}\n\n// {this.props.isOwner ? (<MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" onClick={this.props.handleEdit}>Edit</MDBBtn>) : (\"\")}","import React, { Component } from 'react';\nimport GameCard from \"./GameCard\";\nimport API from '../utils/API';\nimport Slider from \"react-slick\";\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\n\nexport default class Eventload extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOwner: true,\n            gorm: false,\n            grabbedGames: [],\n            hostedGames: [],\n            defaultGame: [{\n                id: \"0\",\n                eventTitle: \"none\",\n                description: \"none\",\n                capacity: \"none\",\n                location: \"none\"\n            }],\n            redirectPath: \"/dashboard\",\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\"),\n            userName: sessionStorage.getItem(\"userName\")\n        };\n        // this.loadRegistedGames();\n    }\n\n  componentDidMount() {\n    this.loadRegistedGames();\n  }\n\n    loadRegistedGames = () => {\n        API.getEvents()\n            .then((Response) => {\n                this.setState(\n                    {\n                        grabbedGames: Response.data,\n                        gorm: true\n                    }\n                )\n                console.log(Response);\n                console.log(this.state.grabbedGames);\n            })\n            .catch(function (error) {\n                console.log(error)\n            });\n    }\n    render() {\n        const settings = {\n            dots: true,\n            infinite: false,\n            speed: 150,\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            slidePerRow: 1,\n            centerMode: false,\n            width: \"300px\"\n        };\n        return (\n            <MDBContainer>\n            <MDBRow>\n            <MDBCol sm=\"3\">\n            </MDBCol>\n            <Slider {...settings} style={{width:\"450px\"}}>\n            \n         \n            {this.state.grabbedGames.map((data) =>\n                \n                <GameCard id={data.id} key={data.id} eventTitle={data.eventTitle} \n                gameName={data.gameName}   \n                description={data.description} location={data.location} maxPlayers={data.maxPlayers}\n                dateTime={data.dateTime}\n                />\n                \n                ) }\n                \n           \n                \n              \n                </Slider >\n                </MDBRow>\n                </MDBContainer>          \n                );\n            }\n        }\n","import React from 'react';\nimport { MDBContainer } from 'mdbreact';\nimport CreateModal from './CreateModal';\nimport Eventload from './eventload';\n// import GameCard from \"./GameCard\";\n// import API from '../utils/API';\n// import { Redirect } from \"react-router-dom\";\n\n\nconst DashBoard = ({ props }) => {\n    return (\n        <div>\n            <MDBContainer>\n                <div>\n                    <h1 className=\"text-white\" style={{ textAlign: \"center\" }}>\n                        Upcoming Games\n                            <CreateModal />\n                    </h1>\n                            <Eventload />\n                </div>\n            </MDBContainer>\n        </div>\n    )\n}\n\nexport default DashBoard\n\n","import React, { Component } from \"react\";\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBCardImage, MDBBtn, MDBCol } from\n  \"mdbreact\";\nimport API from '../utils/API';\n\n// const GamePanel = props => {\n\nclass GamePanel extends Component {\n  // state = {\n  // };\n\n  // componentDidMount() {\n  //   this.loadEvents();\n  // }\n\n  // loadEvents = () => {\n  //   API.getAllEvents()\n  //     .then(res =>\n  //       this.setState({ gameObj: res.data })\n  //     )\n  //     .catch(err => console.log(err));\n  // };\n\n  // deleteEvent = id => {\n  //   API.deleteEvent(id)\n  //     .then(res => this.loadEvents())\n  //     .catch(err => console.log(err));\n  // };\n\n  // handleInputChange = event => {\n  //   const { name, value } = event.target;\n  //   this.setState({\n  //     [name]: value\n  //   });\n  // };\n\n\n  componentDidMount() {\n    this.loadEvents();\n  };\n\n  loadEvents = () => {\n    API.getGames()\n      .then(res =>\n        this.setState({ gameObj: res.data })\n      )\n      .catch(err => console.log(err));\n  };\n\n  deleteGame = id => {\n    API.deleteGame(id)\n      .then((response) => {\n        window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      })\n  }\n  render() {\n\n    return (\n      <div>\n       \n          <MDBCard style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\",backgroundImage:\n          \"url(https://previews.123rf.com/images/tashechka/tashechka1701/tashechka170100695/70080103-abstract-geometric-style-yellow-background-illustration-yellow-white-colors-.jpg)\" }} >\n            <MDBCardHeader color=\"#ffa726 orange lighten-1\">\n              {this.props.gameTitle}\n            </MDBCardHeader>\n            <MDBCardBody>\n              <MDBCardTitle>\n                <a href=\"`{this.props.gameUrl}`\" style={{fontSize: \"20px\", whiteSpace: \"nowrap\", color:\"black\" }}>\n                  {this.props.gameTitle}\n                </a>\n              </MDBCardTitle>\n              <MDBCardText style={{color:\"black\" }}>\n                <MDBCardImage className=\"img-fluid rounded mx-auto d-block\" src={this.props.image} style={{ height: \"80%\", width: \"80%\", borderRadius: \"25px\" }} />\n                <br />\n                {this.props.description}<br />\n              </MDBCardText>\n              <MDBBtn color=\"#e65100 orange darken-4\" size=\"sm\" style={{ color: \"white\",borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 9px #000000)\" }}>\n                Create Event\n        </MDBBtn>\n\n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\",borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 9px #000000)\" }} href=\"#\" onClick={() => this.deleteGame(this.props.id)} >Delete</MDBBtn>\n            </MDBCardBody>\n            <MDBCardFooter color=\"secondary-color\">\n            </MDBCardFooter>\n          </MDBCard>\n      \n      </div>\n    );\n  };\n}\n\nexport default GamePanel;","import React, { Component } from 'react';\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput } from 'mdbreact';\nimport API from '../utils/API';\nimport { number } from 'prop-types';\n\nclass GameModal extends Component {\n    state = {\n        modal1: false,\n        name: \"\",\n        description: \"\",\n        capacity: number,\n        picture: \"\"\n\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    handleCreate = () => {\n        this.setState({ modal1: false });\n\n        API.saveGame({\n            gameName: this.state.name,\n            gameDescript: this.state.description,\n            maxOfPlayers: this.state.capacity,\n            picture: this.state.picture,\n          })\n            .then((response) => {\n                // console.log(\"event created\");\n                // console.log(response);\n                window.location.reload();\n            }).catch(function (error) {\n                console.log(error);\n            })\n        console.log(this.state);\n    }\n\n\n\n    toggle = nr => () => {\n        let modalNumber = 'modal' + nr\n        this.setState({\n            [modalNumber]: !this.state[modalNumber]\n        });\n    }\n\n    render() {\n        return (\n            <MDBContainer style={{textAlign: \"center\"}}>\n                <div style={{ display: \"inline-block\"}}>\n\n                    <MDBBtn className=\"text-white\" color=\"#e65100 orange darken-4\" style={{color: \"white\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.toggle(1)}>Create a Game</MDBBtn>\n\n                    <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} size=\"lg\">\n                        <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={this.toggle(1)}>Create a board game</MDBModalHeader>\n                        <MDBModalBody>\n                            <div className=\"md-form\">\n                                <MDBInput\n                                    material\n                                    containerClassName=\"mb-2 mt-0\"\n                                    hint=\"Game Title\"\n                                    name=\"name\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n                                    material\n                                    containerClassName=\"mb-2 mt-0\"\n                                    hint=\"Description\"\n                                    name=\"description\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n                                    material\n                                    containerClassName=\"mb-2 mt-0\"\n                                    prepend=\"Capacity\"\n                                    hint=\"Maximum Number of People\"\n                                    name=\"capacity\"\n                                    type=\"number\"\n                                    onChange={this.handleInputChange}\n                                />\n\n                                <MDBInput\n                                    material\n                                    containerClassName=\"mb-2 mt-0\"\n                                    hint=\"Image URL\"\n                                    name=\"picture\"\n                                    onChange={this.handleInputChange}\n                                />\n                            </div>\n                        </MDBModalBody>\n                        <MDBModalFooter>\n                            <MDBBtn color=\"#01579b light-blue darken-4\" style={{ color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.toggle(1)}>Close</MDBBtn>\n                            <MDBBtn color=\"#e65100 orange darken-4\" style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.handleCreate}>Create</MDBBtn>\n                        </MDBModalFooter>\n                    </MDBModal>\n                </div>\n            </MDBContainer>\n        );\n    }\n}\n\nexport default GameModal;","import React, { Component } from 'react';\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\nimport GamePanel from \"./GamePanel\";\nimport API from '../utils/API';\nimport GameModal from './GameModal';\nimport Slider from \"react-slick\";\n\nexport default class FindGame extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gamesToPlay: [],\n            redirectPath: \"/findgame\",\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\")\n        };\n    }\n    componentDidMount = () => {\n           this.loadGamesToPlay();\n    }\n    loadGamesToPlay = () => {\n        API.getGames()\n            .then((Response) => {\n                this.setState(\n                    {\n                        gamesToPlay: Response.data\n                    }\n                )\n                console.log(Response);\n                console.log(this.state.gamesToPlay);\n\n            })\n            .catch(function (error) {\n                console.log(error)\n            });\n\n    }\n\n\n    render() {\n        const settings = {\n            dots: true,\n            infinite: false,\n            speed: 150,\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            slidePerRow: 1,\n            centerMode: false,\n            width: \"300px\"\n        };\n        return (\n           <div>\n                <div>\n                <GameModal />\n                </div>\n           \n           \n           <MDBContainer style={{textgAlign:\"center\"}}>\n            \n           <MDBRow>\n            <MDBCol sm=\"3\">\n            </MDBCol>\n            <Slider {...settings} style={{width:\"450px\"}} >\n            \n            {this.state.gamesToPlay.map((data) =>\n                (<GamePanel id={data.id} key={data.id} gameTitle={data.gameName} description={data.gameDescript} image={data.picture} timesPlayed={data.totalTimesPlayed} maxPlayers={data.maxOfPlayers} />))}\n                \n                \n                </Slider>\n                </MDBRow>\n                \n                </MDBContainer>\n                \n                </div> \n                )\n            }\n        }","import React, { Component } from \"react\";\nimport { MDBCard, MDBBtn, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\nimport API from '../utils/API';\n\nclass NewsCard extends Component {\n  state = {\n\n  };\n\n  deleteNews = id => {\n    API.deleteNews(id)\n      .then((response) => {\n        window.location.reload();\n      }).catch(function (error) {\n        console.log(error);\n      })\n  }\n\n\n  render() {\n    return (\n      <MDBCol md=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(30px 30px 9px #000000)\" }}>\n        <br />\n          <a href={this.props.link}>\n            <MDBCardImage className=\"img-fluid rounded mx-auto d-block\" src={this.props.image}  style={{ height : \"80%\", width :   \"80%\", borderRadius: \"25px\"}} waves />\n          </a>\n         <MDBCardBody>\n            <MDBCardTitle>\n              <a href={this.props.link} style={{color: \"gray\" , fontSize: \"18px\"}}>\n                {this.props.gameTitle}\n              </a>\n            </MDBCardTitle>\n            <MDBCardText style={{color: \"black\", textAlign:\"left\"}}>\n              {this.props.summary}\n            </MDBCardText>\n            <MDBBtn color=\"#1565c0 blue darken-3\" style={{color:\"white\", borderRadius: \"8px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}}  href=\"#\" onClick={() => this.deleteNews(this.props.id)} >Delete</MDBBtn>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol>\n    )\n  }\n}\nexport default NewsCard;","import React, { Component } from 'react';\nimport { MDBContainer, MDBRow , MDBCol, MDBBtn } from 'mdbreact';\nimport NewsCard from \"./NewsCard\";\nimport API from '../utils/API';\n\n\nexport default class DashBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newsArticles: [],\n            redirectPath: \"/news\",\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\")\n        };\n    }\n    componentDidMount = () => {\n        // this.handlesubmit();\n        this.loadNewsArticles();\n    }\n    loadNewsArticles = () => {\n        API.getNews ()\n            .then((Response) => {\n                this.setState(\n                    {\n                        newsArticles: Response.data\n                    }\n                )\n                console.log(Response);\n                console.log(this.state.newsArticles);\n\n            })\n            .catch(function (error) {\n                console.log(error)\n            });\n\n    }\n\n    handlesubmit(event) {\n        console.log(\"scrape in progress\");\n        API.scrape()\n          .then((response) => {\n            console.log(response);\n            window.location.reload();\n            \n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n\n\n    render() {\n        return (\n            <div>\n                <MDBContainer>\n                <br />\n                <MDBRow>\n                <MDBCol>\n                    <div>\n                        <h1 className=\"text-white\" style= {{textAlign: \"center\"}}>\n                            Boardgames in the News<br />\n                            <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.handlesubmit}>Scrape</MDBBtn>\n                        </h1>\n                        <div className=\"d-flex flex-row flex-wrap\">\n                            {this.state.newsArticles.map((data) => \n                                (<NewsCard id={data.id} key={data.id} gameTitle={data.title} summary={data.summary} image={data.image} link={data.link} />))}\n                        </div>\n                    </div>\n                    </MDBCol>\n                    </ MDBRow>\n                </MDBContainer>\n                {/* why is this part here?\n                    <Redirect to={this.state.redirectPath} />\n                */}\n            </div>\n        )\n    }\n\n}","import React, { Component } from 'react'\nimport { MDBBadge } from \"mdbreact\"\n\nexport default class GameTag extends Component {\n    delete = () => {\n        if (this.props.removable)\n        this.props.delete(this.props.index);\n    }\n    render() {\n        return (\n            <div>\n                <MDBBadge pill color=\"red\" onClick={this.delete}>{this.props.name}</MDBBadge>\n            </div>\n    )\n    }\n}\n","import React, { Component } from 'react';\nimport { MDBBtn, MDBInput, MDBModalFooter, MDBModalHeader, MDBModalBody, MDBModal, MDBContainer} from \"mdbreact\";\nimport API from \"../utils/API\";\nimport GameTag from \"./GameTag\"\n\n\nexport default class UpdateProfileModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            updateModal: false,\n            image: \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\",\n            userName: this.props.userName,\n            gender: \"\",\n            introduction: \"\",\n            favorite: [],\n            gameItem: \"\"\n        }\n        this.selectGender = this.selectGender.bind(this);\n    }\n    componentDidMount = () => {\n        this.setState({favorite: this.props.gameArr});\n    }\n    modalToggle = () => {\n        let mod = \"updateModal\";\n        this.setState({ [mod]: !this.state[mod] });\n    }\n    selectGender = event => {\n        this.setState( {gender: event.target.value} );\n    }\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    deleteTag = index => {\n        let tempArr = this.state.favorite;\n        tempArr.splice(index, 1);\n        this.setState( {favorite: tempArr} );\n    }\n    addGame = () => {\n        if (this.state.gameItem) {\n            let tempArr = this.state.favorite;\n            tempArr.push(this.state.gameItem);\n            this.setState( {favorite: tempArr, gameItem: \"\"} );\n        }\n    }\n    handleUpdate = () => {\n        console.log(this.state);\n        this.modalToggle();\n        let profileObj = {\n            userName: this.props.userName,\n            userImage: this.state.image,\n            userGender: this.state.gender,\n            userIntro: this.state.introduction,\n            favoriteGames: JSON.stringify(this.state.favorite)\n        };\n        console.log(profileObj);\n        API.updateProfile(sessionStorage.getItem(\"token\"), profileObj).then(res => {\n            console.log(res);\n        }).catch(err => \n            console.log(err)\n        );\n        this.props.update(profileObj);\n    }\n    render() {\n        return (\n            <MDBContainer>\n                <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=>this.modalToggle()}>Update </MDBBtn>\n\n                <MDBModal isOpen={this.state.updateModal} toggle={()=>this.modalToggle()} size=\"lg\">\n                    <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={()=>this.modalToggle()}> Update Your Profile </MDBModalHeader>\n                    <MDBModalBody>\n                        <MDBInput    \n                            className=\"mb-2 mt-0\"\n                            name=\"image\"\n                            hint=\"Input Image URL\"\n                            onChange={this.handleInputChange}\n                        />\n                        <select  \n                            className=\"mb-2 mt-0 browser-default custom-select\"\n                            name=\"gender\"\n                            onChange={this.selectGender}\n                            value={this.state.gender}\n                        >\n                            <option value=\"Unknown\">Choose your gender</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                        </select> \n                        <MDBInput    \n                            className=\"mb-2 mt-0\"\n                            name=\"introduction\"\n                            hint=\"Introduce yourself\"\n                            type=\"text\"\n                            onChange={this.handleInputChange}\n                        />\n                        <div className=\"mb-2 mt-0\">\n                            <MDBInput className=\"\" name=\"gameItem\" hint=\"Name of Games You Like\" onChange={this.handleInputChange} value={this.state.gameItem}/>\n                            <MDBBtn color=\"red\" className=\"\"  style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.addGame}>ADD</MDBBtn>\n                            {console.log(this.state.favorite)}\n                            {console.log(this.props.gameArr)}\n                            {this.state.favorite.map((element, index) => (\n                                <GameTag name={element} color=\"#01579b light-blue darken-4\" index={index} delete={this.deleteTag} key={index} removable={true}/>\n                            ))}\n                        </div>\n                        \n                    </MDBModalBody>\n\n                    <MDBModalFooter style={{textAlign:\"center\"}}>\n                        <MDBBtn color=\"#01579b light-blue darken-4\"  style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}}  onClick={() =>this.modalToggle()}>Close</MDBBtn>\n                        <MDBBtn color=\"#d50000 red accent-4\" style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={()=>this.handleUpdate()}>Confirm</MDBBtn>\n                    </MDBModalFooter>\n                </MDBModal>\n            </MDBContainer>\n        )\n    }\n}\n","import React, {Component} from 'react'\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport API from \"../utils/API\"\nimport UpdateProfileModal from \"./UpdateProfileModal\";\nimport GameTag from \"./GameTag\"\n// import { Redirect, Route, Link } from \"react-router-dom\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      image: \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\",\n      userName: \"\",\n      gender: \"\",\n      introduction: \"\",\n      favorite: []\n    };\n    this.updateProfileState = this.updateProfileState.bind(this);\n    // this.loadProfile();\n\n  }\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  updateProfileState = userData => {\n    console.log(userData);\n    this.setState( {image: userData.userImage } );\n    this.setState( {userName: userData.userName} );\n    this.setState( {gender: userData.userGender} );\n    this.setState( {introduction: userData.userIntro} );\n    this.setState( {favorite: JSON.parse(userData.favoriteGames)} );\n  }\n\n  loadProfile() {\n    API.getProfile(sessionStorage.getItem(\"token\"))\n    .then(response =>{\n      console.log(\"user data:\",response.data);\n      this.updateProfileState(response.data);\n    }).catch(\n      err => console.log(err)\n    );\n  }\n  \n\n  render() {\n    return (\n      <MDBContainer>\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5 text-white\">Profile</h2>\n        <MDBRow>\n          <MDBCol sm=\"4\">\n            <img src={this.state.image || \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\"} width=\"200\" alt =\"logo\" style={{ borderRadius: \"20px\", filter: \"drop-shadow(10px 10px 5px #000000)\"}}/>\n          </MDBCol>\n          <MDBCol sm=\"8\">\n            <MDBRow>\n              <MDBCol sm=\"6\">\n                <p className=\"pb-5 text-white\">Username: {this.state.userName || \"Unknown\"}</p>\n              </MDBCol>\n              <MDBCol sm=\"6\">\n                <p className=\"pb-5 text-white\">Gender: {this.state.gender || \"Unknown\"}</p>\n              </MDBCol>\n            </MDBRow>\n            <p className=\"pb-5 text-white\">Favorite Boardgames: {this.state.favorite ? this.state.favorite.map((element, index) => (\n               <GameTag name={element} color=\"#0d47a1\" key={index} removable={false}/>\n             )): \"Unknown\"}</p>\n            <p className=\"pb-5 text-white\">About me: {this.state.introduction || \"User has no information yet!\"}</p>\n          </MDBCol>\n        </MDBRow>\n        <UpdateProfileModal  userName={this.state.userName} update={this.updateProfileState} gameArr={this.state.favorite}/>\n\n\n      </MDBContainer>\n\n\n      \n    )\n  }\n}\n","import React, { Component } from 'react';\n// import { Redirect } from \"react-router-dom\";\nimport { MDBBtn, MDBCard, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\n// import GameCard from \"./GameCard\";\n// import CreateModal from './CreateModal';\n// import API from '../utils/API';\nimport Slider from \"react-slick\";\n\nexport default class SimpleSlider extends Component {\n  render() {\n    const settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <div>\n\n        \n        <Slider {...settings}>\n        <div style={{textAlign: \"center\"}}>\n       \n \n        <MDBCol sm=\"12\" style={{textAlign: \"center\"}}>\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\", textAlign: \"center\"}}>AAAAAAA</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        \n        </div>\n\n\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        <div>\n        <MDBCol sm=\"4\">\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\" }}>gsdfgsdfg</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n              \n      \n   \n            </MDBCard>\n            </MDBCol>\n        </div>\n        </Slider>\n\n\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { MDBBtn, MDBCard, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\n// import { Redirect } from \"react-router-dom\";\nimport Slider from \"react-slick\";\n\nexport default class SimpleSlider2 extends Component {\n  render() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 3,\n        slidesToScroll: 3\n    };\n    return (\n      <div>\n      \n      <Slider {...settings}>\n      <h2> Multiple items </h2>\n        <div style={{textAlign: \"center\"}}>\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n            <MDBCardTitle style={{ color: \"black\", textAlign: \"center\"}}>AAAAAAA</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n              </MDBCardText>\n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n            </MDBCard>\n          </div>\n        <div style={{textAlign: \"center\"}}>\n       \n \n        <MDBCol sm=\"12\" style={{textAlign: \"center\"}}>\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\", textAlign: \"center\"}}>AAAAAAA</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n             </MDBCard>\n            </MDBCol>\n          </div>\n        <div style={{textAlign: \"center\"}}>\n       \n \n        <MDBCol sm=\"12\" style={{textAlign: \"center\"}}>\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\", textAlign: \"center\"}}>AAAAAAA</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n             </MDBCard>\n            </MDBCol>\n          </div>\n        <div style={{textAlign: \"center\"}}>\n       \n \n        <MDBCol sm=\"12\" style={{textAlign: \"center\"}}>\n        <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }}>\n  \n  \n        <MDBCardTitle style={{ color: \"black\", textAlign: \"center\"}}>AAAAAAA</MDBCardTitle>\n              <MDBCardText>\n              <span><p>Location: </p>sfdgsdfg</span><br />\n                {/* Created by:{CardExample.eventOwner}<br />c */}\n                <span><p>Max Players: </p>sdfgsd</span><br />\n                <span><p>Description: </p>gsdfgsd</span><br />\n                {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\n              </MDBCardText>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Join</MDBBtn>\n              \n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" >Delete</MDBBtn>\n             </MDBCard>\n            </MDBCol>\n          </div>\n    </Slider>\n\n\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Dashboard from \"./components/DashBoard\";\nimport FindGame from \"./components/FindGame\";\nimport News from \"./components/News\";\nimport Profile from \"./components/Profile\";\nimport Test from \"./components/test\";\nimport Test2 from \"./components/test2\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import Routes from \"./Routes\";\n\n  class App extends Component {\n  state = {\n    isLoggedIn: sessionStorage.getItem(\"isLoggedIn\"),\n    userName: sessionStorage.getItem(\"userName\")\n  };\n  logIn = () => {\n    this.setState({isLoggedIn: true});\n  }\n  logOut = () => {\n    this.setState({isLoggedIn: false});\n  }\n  render() {\n\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div style={{\n          backgroundImage:\n            \"url(https://i.ibb.co/BVy8Qwt/bluebb.jpg)\",\n       \n        }}>\n          <Navbar isLoggedIn={this.state.isLoggedIn} handleLogOut={this.logOut}/>\n          <Switch>\n           \n              <Route exact path=\"/\" render={() => <Login handleLogIn={this.logIn} />} />\n              <Route exact path=\"/signUp\"render={() => <SignUp handleLogIn={this.logIn}/>} />\n              <Route exact path=\"/dashboard\" component={Dashboard} />\n              <Route exact path=\"/find-game\" component={FindGame} />\n              <Route exact path=\"/news\" component={News} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route exact path=\"/test2\" component={Test2} />\n              \n         \n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render( <App /> , document.getElementById('root'));\n\nregisterServiceWorker();"],"sourceRoot":""}