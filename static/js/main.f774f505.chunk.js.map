{"version":3,"sources":["components/Navbar.js","utils/API.js","components/Login.js","components/SignUp.js","components/CreateModal.js","components/GameCard.js","components/eventload.js","components/DashBoard.js","components/GamePanel.js","components/GameModal.js","components/FindGame.js","components/NewsCard.js","components/News.js","components/GameTag.js","components/UpdateProfileModal.js","components/Profile.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCollapse","setState","isOpen","state","logOut","sessionStorage","clear","handleLogOut","isLoggedIn","react_default","a","createElement","mdbreact_esm","to","onClick","color","dark","expand","react_media","query","matches","react_router_dom","className","src","alt","id","navbar","right","active","Component","url","API","getAllEvents","axios","get","getEvents","getEvent","eventId","deleteEvent","delete","saveEvent","eventData","post","updateEvent","put","getUsers","getUser","userId","addUser","userData","logIn","username","password","userName","signUp","joinEvent","joinEvent3","getPlayers","scrape","getNews","deleteNews","newsId","getGames","saveGame","deleteGame","gameId","updateGame","gameData","updateProfile","profileObj","getProfile","Login","redirectPath","usernameHandler","bind","assertThisInitialized","passwordHandler","handleSubmit","renderRedirect","console","log","event","target","value","_this2","preventDefault","then","response","data","setItem","handleLogIn","window","location","reload","alert","catch","error","sm","style","margin","backgroundImage","backgroundSize","width","align","borderRadius","filter","whiteSpace","href","onSubmit","label","group","icon","type","validate","onChange","rounded","md","react_router","React","SignUp","CreateModal","handleInputChange","_event$target","name","defineProperty","handleCreate","maxPlayers","modal1","eventTitle","gameName","description","dateTime","gpsLocation","creatorName","getItem","toggle","nr","modalNumber","display","size","textAlign","hint","GameCard","enrolledPlayers","loadEvents","res","gameObj","err","loadEventsNplayers","joinedPlayers","listPlayers","join","toString","joinEvent2","playerList","splitList","split","i","length","push","newPlayerList","parseInt","Eventload","loadRegistedGames","Response","grabbedGames","isOwner","gorm","hostedGames","defaultGame","capacity","lib_default","assign","dots","infinite","speed","slidesToShow","slidesToScroll","slidePerRow","centerMode","map","components_GameCard","key","DashBoard","_ref","components_CreateModal","eventload_Eventload","GamePanel","gameTitle","fontSize","image","height","GameModal","number","picture","gameDescript","maxOfPlayers","material","containerClassName","prepend","FindGame","componentDidMount","loadGamesToPlay","gamesToPlay","components_GameModal","textgAlign","components_GamePanel","NewsCard","link","waves","summary","loadNewsArticles","newsArticles","handlesubmit","components_NewsCard","title","GameTag","removable","index","pill","UpdateProfileModal","favorite","gameArr","modalToggle","mod","selectGender","gender","deleteTag","tempArr","splice","addGame","gameItem","handleUpdate","userImage","userGender","userIntro","introduction","favoriteGames","JSON","stringify","update","updateModal","element","GameTag_GameTag","Profile","updateProfileState","parse","loadProfile","UpdateProfileModal_UpdateProfileModal","App","basename","process","components_Navbar","exact","path","render","components_Login","components_SignUp","component","Dashboard","News","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","document","getElementById","URL","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f774f505.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse } from \"mdbreact\";\r\nimport Media from 'react-media';\r\n\r\nclass Navbar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isOpen: false\r\n        };\r\n    }\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n    logOut = () => {\r\n        sessionStorage.clear();\r\n        this.props.handleLogOut();\r\n    }\r\n    isLoggedIn = () => {\r\n        if (this.props.isLoggedIn) {\r\n            return (\r\n                <MDBNavItem>\r\n                    <MDBNavLink to=\"/\" onClick={this.logOut}>\r\n                        Log Out\r\n                    </MDBNavLink>\r\n                </MDBNavItem>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBNavbar color=\"#283593 indigo darken-3\" dark expand=\"md\">\r\n                    <MDBNavbarBrand>\r\n                     <Media query=\"(max-width: 599px)\">\r\n                     {matches =>\r\n                      matches ? (\r\n                        <Link className=\"navbar-brand containerFluid\" to=\"/\">\r\n                            <img className=\"containerFluid\" src=\"https://i.ibb.co/yF7HS8y/bgwf-small.jpg\" alt=\"Board Games with Friends\" />\r\n                         </Link>\r\n                       ) : (\r\n                            <Link className=\"navbar-brand containerFluid\" to=\"/\">\r\n                                <img className=\"containerFluid\" src=\"https://i.ibb.co/yXrwR6V/bgwf.jpg\" alt=\"Board Games with Friends\" />\r\n                            </Link>\r\n                       ) }\r\n                        </Media>\r\n                    </MDBNavbarBrand>\r\n                    <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                    <MDBCollapse id=\"navbarCollapse\" isOpen={this.state.isOpen} navbar>\r\n                        <MDBNavbarNav right>\r\n                        {!this.props.isLoggedIn &&\r\n                            <MDBNavItem active>\r\n                                <MDBNavLink to=\"/\"><i className=\"fas fa-home\"></i>\r\n                                    Login\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                        }\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/dashboard\">\r\n                                    <i className=\"fas fa-chess-rook\"></i>\r\n                                    My Game\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/find-game\">\r\n                                    <i className=\"fas fa-chess-knight\"></i>\r\n                                    Find A Game\r\n                                </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            <MDBNavItem>\r\n                                <MDBNavLink to=\"/news\">\r\n                                    <i className=\"far fa-newspaper\"></i>\r\n                                    News\r\n                                 </MDBNavLink>\r\n                            </MDBNavItem>\r\n                            {this.props.isLoggedIn &&\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/profile\">\r\n                                        <i className=\"far fa-address-card\"></i>\r\n                                        Profile\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                            }\r\n                            {/* {this.props.isLoggedIn &&\r\n                                <MDBNavItem>\r\n                                    <MDBNavLink to=\"/\" onClick={this.logOut}>\r\n                                        Log Out\r\n                                    </MDBNavLink>\r\n                                </MDBNavItem>\r\n                            } */}\r\n                            { this.isLoggedIn() }\r\n                        </MDBNavbarNav>\r\n                    </MDBCollapse>\r\n                </MDBNavbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import axios from \"axios\";\r\n\r\n// const url = \"https://arcane-spire-45572.herokuapp.com\";\r\nconst url = \"https://limitless-eyrie-66892.herokuapp.com\";\r\n\r\n// const url = \"http://localhost:8080\";\r\n\r\nexport default {\r\n  // Event API's  \r\n\r\n  // Gets all events\r\n  getAllEvents: function () {\r\n    return axios.get(url + \"/api/gameEvents\");\r\n  },\r\n\r\n  // Gets all events created by current user\r\n  getEvents: function () {\r\n    return axios.get(url + \"/api/gameEvents\");\r\n  },\r\n\r\n  // Gets the event with the given id\r\n  getEvent: function (eventId) {\r\n    return axios.get(url + \"/api/gameEvents/\" + eventId);\r\n  },\r\n  // Deletes the event with the given id\r\n  deleteEvent: function (eventId) {\r\n    return axios.delete(url + \"/api/gameEvents/\" + eventId);\r\n  },\r\n  // Saves an event to the database\r\n  saveEvent: function (eventData) {\r\n    return axios.post(url + \"/api/gameEvents\", eventData);\r\n  },\r\n  updateEvent: function (eventData) {\r\n    return axios.put(url + \"/api/gameEvents/\", eventData);\r\n  },\r\n\r\n  // User Profile APIs\r\n  // Gets all users\r\n  getUsers: function () {\r\n    return axios.get(url + \"/api/users\");\r\n  },\r\n  // Gets the user with the given id\r\n  getUser: function (userId) {\r\n    return axios.get(url + \"/api/users/\" + userId);\r\n  },\r\n \r\n  // Saves a user to the database\r\n  addUser: function (userData) {\r\n    return axios.post(url + \"/api/users/\", userData);\r\n  },\r\n\r\n  // Login/SignUp APIs\r\n  // Login\r\n  logIn: (username, password) => {\r\n    return axios.post(url + \"/api/login\", \r\n    {\r\n      userName: username,\r\n      password: password\r\n    });\r\n  },\r\n  signUp: (username, password) => {\r\n    return axios.post(url + \"/api/createaccount\", \r\n    {\r\n      userName: username,\r\n      password: password\r\n    });\r\n  },\r\n  \r\n  joinEvent: function (userId, eventId) {\r\n    return axios.post(url + \"/api/users/join2/\" + userId + \"/\" + eventId);\r\n  },\r\n  joinEvent3: function (eventId, eventData) {\r\n    return axios.put(url + \"/api/users/join3/\"  + eventId, eventData);\r\n  },\r\n  getPlayers: function (eventId) {\r\n    return axios.get(url + \"/api/users/join/\"  + eventId);\r\n  },\r\n\r\n\r\n  scrape: function () {\r\n    return axios.get(url + \"/api/scrape\");\r\n  },\r\n  getNews: function () {\r\n    return axios.get(url + \"/api/getNews\");\r\n  },\r\n  deleteNews: function (newsId) {\r\n    return axios.delete(url + \"/api/deleteNews/\" + newsId);\r\n  },\r\n\r\n\r\n  getGames: function () {\r\n    return axios.get(url + \"/api/getGames\");\r\n  },\r\n  saveGame: function (eventData) {\r\n  return axios.post(url + \"/api/saveGame/\", eventData);\r\n  },\r\n  deleteGame: function (gameId) {\r\n    return axios.delete(url + \"/api/deleteGame/\" +gameId);\r\n  },\r\n  updateGame: function (gameId, gameData) {\r\n    return axios.put(url + \"/api/updateGame/\" + gameId, gameData);\r\n  },\r\n  updateProfile: function (userId, profileObj) {\r\n    return axios.put(url + \"/api/updateProfile/\" + userId, profileObj);\r\n  },\r\n  getProfile: function (userId) {\r\n    return axios.get(url + \"/api/getProfile/\" + userId);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      redirectPath: \"/\"\r\n    };\r\n\r\n    this.usernameHandler = this.usernameHandler.bind(this);\r\n    this.passwordHandler = this.passwordHandler.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.renderRedirect = this.renderRedirect.bind(this);\r\n\r\n\r\n  }\r\n  renderRedirect(){\r\n    console.log(\"redirect\");\r\n    this.setState(\r\n      {\r\n\r\n        redirectPath: \"/dashboard\"\r\n      }\r\n    )\r\n  }\r\n  usernameHandler(event) {\r\n    this.setState(\r\n      {\r\n        username: event.target.value\r\n      }\r\n    )\r\n  }\r\n  passwordHandler(event) {\r\n    this.setState(\r\n      {\r\n        password: event.target.value\r\n      }\r\n    )\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    API.logIn(this.state.username, this.state.password)\r\n      .then((response) => {\r\n        if (!response.data) {\r\n          alert(\"wrong username or password\")\r\n        } else {\r\n          sessionStorage.setItem(\"token\", response.data);\r\n          sessionStorage.setItem(\"isLoggedIn\", true);\r\n          sessionStorage.setItem(\"userName\", this.state.username);\r\n          this.props.handleLogIn();\r\n          this.renderRedirect();\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol sm=\"3\"></MDBCol>\r\n            <MDBCol sm=\"6\">\r\n              <MDBRow style={{ margin: \"auto\" }}>\r\n                <MDBCard\r\n                  className=\"card-image\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url(https://render.fineartamerica.com/images/rendered/default/poster/8/10/break/images-medium/chess-white-king-in-check-mate-position-adrian-pope.jpg)\",\r\n                    backgroundSize: \"100% 100%\",\r\n                    width: \"28rem\",\r\n                    align: \"center\",\r\n                    margin: \"30px\",\r\n                    borderRadius: \"20px\",\r\n                    filter: \"drop-shadow(10px 10px 9px #000000)\"\r\n                  }}>\r\n                  <div className=\"text-white rgba-stylish-strong py-5 px-5 z-depth-4\" style={{ borderRadius: \"20px\", color: \"white\" }}>\r\n                    <div className=\"text-center\">\r\n                      <h3 className=\"text-white mb-5 mt-4 font-weight-bold\" style={{ whiteSpace: \"nowrap\"}}>\r\n                        <strong>LOG</strong>\r\n                        <a href=\"#!\" className=\"red-text font-weight-bold\">\r\n                          <strong>IN</strong>\r\n                        </a>\r\n                      </h3>\r\n                    </div>\r\n               <form onSubmit={this.handleSubmit}>\r\n                  <MDBInput className=\"text-white\" label=\"Your email\" group icon=\"user\" type=\"text\" validate onChange={this.usernameHandler} />\r\n                  <MDBInput className=\"text-white\" label=\"Your password\" group icon=\"lock\" type=\"password\" validate onChange={this.passwordHandler} />\r\n                  \r\n                  <MDBRow className=\"d-flex align-items-center mb-4\">\r\n                  <div className=\"text-center mb-3 col-md-12\">\r\n                  <MDBBtn\r\n                  color=\"red\"\r\n                  rounded\r\n                  type=\"submit\"\r\n                  className=\"btn-block z-depth-1\"\r\n                  style={{\r\n                    borderRadius: \"8px\",\r\n                    filter: \"drop-shadow(10px 10px 9px #000000)\"\r\n                  }}>\r\n                  LOG IN\r\n                  </MDBBtn>\r\n                  </div>\r\n                  </MDBRow>\r\n                </form>\r\n                  <MDBCol sm=\"12\">\r\n                    <p className=\"font-small text-white d-flex justify-content-end\">\r\n                      Don't have an accout?\r\n                <Link to=\"/signUp\" className=\"red-text ml-1 font-weight-bold\">\r\n                        Sign Up\r\n                  </Link>\r\n                    </p>\r\n                  </MDBCol>\r\n                  <MDBCol md=\"12\">\r\n                      <p className=\"font-small white-text d-flex justify-content-end\">\r\n                        Forgot\r\n                  <a href=\"#!\" className=\"red-text ml-1 font-weight-bold\">\r\n                          Password?\r\n                  </a>\r\n                      </p>\r\n                    </MDBCol>\r\n                    </div>\r\n                  </MDBCard>\r\n                \r\n\r\n              </MDBRow>\r\n            </MDBCol>\r\n          <MDBCol sm=\"3\"></MDBCol>\r\n          </MDBRow>\r\n        <Redirect to={this.state.redirectPath} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        </MDBContainer>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn, MDBCard, MDBInput } from 'mdbreact';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\n\r\nclass SignUp extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      redirectPath: \"/signUp\"\r\n    };\r\n\r\n    this.usernameHandler = this.usernameHandler.bind(this);\r\n    this.passwordHandler = this.passwordHandler.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.renderRedirect = this.renderRedirect.bind(this);\r\n\r\n\r\n  }\r\n\r\n  renderRedirect() {\r\n    console.log(\"redirect\");\r\n    this.setState(\r\n      {\r\n\r\n        redirectPath: \"/dashboard\"\r\n      }\r\n    )\r\n  }\r\n\r\n  usernameHandler(event) {\r\n    this.setState(\r\n      {\r\n        username: event.target.value\r\n      }\r\n    )\r\n  }\r\n  passwordHandler(event) {\r\n    this.setState(\r\n      {\r\n        password: event.target.value\r\n      }\r\n    )\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.state.username, this.state.password);\r\n    API.signUp(this.state.username, this.state.password)\r\n      .then((response) => {\r\n        sessionStorage.setItem(\"token\", response.data);\r\n        sessionStorage.setItem(\"isLoggedIn\", true);\r\n        console.log(response);\r\n        alert(\"Thank you, please now login using your chosen username and password.\")\r\n        this.props.handleLogIn();\r\n        this.renderRedirect();\r\n\r\n        API.logIn(this.state.username, this.state.password)\r\n          .then((response) => {\r\n            if (!response.data) {\r\n              alert(\"wrong username or password\")\r\n            } else {\r\n              sessionStorage.setItem(\"token\", response.data);\r\n              sessionStorage.setItem(\"isLoggedIn\", true);\r\n              sessionStorage.setItem(\"userName\", this.state.username);\r\n              // this.props.handleLogIn();\r\n              this.renderRedirect();\r\n              window.location.reload();\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n\r\n        if (!response.data) {\r\n          alert(\"wrong username or password\")\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol sm=\"3\"></MDBCol>\r\n            <MDBCol sm=\"6\">\r\n              <MDBRow style={{ margin: \"auto\" }}>\r\n                <MDBCard\r\n                  className=\"card-image\"\r\n                  style={{\r\n                    backgroundImage:\r\n                      \"url(https://render.fineartamerica.com/images/rendered/default/poster/8/10/break/images-medium/chess-white-king-in-check-mate-position-adrian-pope.jpg)\",\r\n                    backgroundSize: \"100% 100%\",\r\n                    width: \"28rem\",\r\n                    align: \"center\",\r\n                    margin: \"30px\",\r\n                    borderRadius: \"20px\",\r\n                    filter: \"drop-shadow(10px 10px 9px #000000)\"\r\n                  }}>\r\n                  <div className=\"text-white rgba-stylish-strong py-5 px-5 z-depth-4\" style={{ borderRadius: \"20px\", color: \"white\" }}>\r\n                    <div className=\"text-center\">\r\n                      <h3 className=\"text-white mb-5 mt-4 font-weight-bold\" style={{ whiteSpace: \"nowrap\" }}>\r\n                        <strong>SIGN</strong>\r\n                        <a href=\"#!\" className=\"#1565c0-text font-weight-bold\">\r\n                          <strong> UP</strong>\r\n                        </a>\r\n                      </h3>\r\n                    </div>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                      <MDBInput className=\"text-white\" label=\"Your email\" group icon=\"user\" type=\"text\" validate onChange={this.usernameHandler} />\r\n                      <MDBInput className=\"text-white\" label=\"Your password\" group icon=\"lock\" type=\"password\" validate onChange={this.passwordHandler} />\r\n\r\n                      <MDBRow className=\"d-flex align-items-center mb-4\">\r\n                        <div className=\"text-center mb-3 col-md-12\">\r\n                          <MDBBtn\r\n                            color=\"#1565c0 blue darken-3\"\r\n                            rounded\r\n                            type=\"submit\"\r\n                            className=\"btn-block z-depth-1\"\r\n                            style={{\r\n                              borderRadius: \"8px\",\r\n                              filter: \"drop-shadow(10px 10px 9px #000000)\"\r\n                            }}>\r\n                            SIGN UP\r\n                    </MDBBtn>\r\n                        </div>\r\n                      </MDBRow>\r\n                    </form>\r\n                    <MDBCol sm=\"12\">\r\n                      <p className=\"font-small text-white d-flex justify-content-end\">\r\n                        Already have an accout?\r\n                <Link to=\"/\" className=\"#1565c0-text ml-1 font-weight-bold\">\r\n                          Log in\r\n                  </Link>\r\n                      </p>\r\n                    </MDBCol>\r\n                  </div>\r\n                </MDBCard>\r\n\r\n\r\n              </MDBRow>\r\n            </MDBCol>\r\n            <MDBCol sm=\"3\"></MDBCol>\r\n          </MDBRow>\r\n          <Redirect to={this.state.redirectPath} />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <br />\r\n        </MDBContainer>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput } from 'mdbreact';\r\nimport API from '../utils/API';\r\n// import { number } from 'prop-types';\r\n\r\nclass CreateModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            modal1: false,\r\n            eventTitle: \"\",\r\n            gameName: \"\",\r\n            description: \"\",\r\n            location: \"\",\r\n            maxPlayers: \"\",\r\n            dateTime: \"\",\r\n            gpsLocation: \"\"\r\n        }\r\n    }\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    handleCreate = () => {\r\n        if (this.state.maxPlayers < 2) {\r\n            alert(\"Maximum players too low!\");\r\n            return;\r\n        }\r\n        this.setState({ modal1: false });\r\n        API.saveEvent({\r\n            // token: sessionStorage.getItem(\"token\"),\r\n            eventTitle: this.state.eventTitle,\r\n            gameName: this.state.gameName,\r\n            description: this.state.description,\r\n            location: this.state.location,\r\n            maxPlayers: this.state.maxPlayers,\r\n            dateTime: this.state.dateTime,\r\n            gpsLocation: this.state.gpsLocation,\r\n            creatorName: sessionStorage.getItem(\"userName\")\r\n            // enrolledPlayers: \r\n            // time: this.state.time,\r\n        })\r\n            .then((response) => {\r\n                console.log(\"event created\");\r\n                console.log(response);\r\n                window.location.reload();\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n\r\n    toggle = nr => () => {\r\n        let modalNumber = 'modal' + nr\r\n        this.setState({\r\n            [modalNumber]: !this.state[modalNumber]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n           \r\n                <div style={{ display: \"inline-block\" }}>\r\n\r\n                    <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.toggle(1)}>Create Event</MDBBtn>\r\n\r\n                    <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} size=\"lg\">\r\n                        <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={this.toggle(1)}>Create a board game</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"md-form\">\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    hint=\"Event Title\"\r\n                                    name=\"eventTitle\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    name=\"gameName\"\r\n                                    hint=\"The Name Of The Boardgame\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    hint=\"Maximum Number of People\"\r\n                                    name=\"maxPlayers\"\r\n                                    type=\"number\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    hint=\"Date and start time\"\r\n                                    name=\"dateTime\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    hint=\"GPSlocation\"\r\n                                    name=\"gpslocation\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    hint=\"Location\"\r\n                                    name=\"location\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    className=\"mb-2 mt-0\"\r\n                                    type=\"textarea\"\r\n                                    hint=\"Extra Information\"\r\n                                    name=\"description\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                            <MDBBtn color=\"#01579b light-blue darken-4\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\" }} onClick={this.toggle(1)}>Close</MDBBtn>\r\n                            <MDBBtn color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\" }} onClick={this.handleCreate}>Create</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateModal;","import React, { Component } from \"react\";\r\nimport { MDBBtn, MDBCard, MDBCardBody, MDBCardTitle, MDBCardText } from 'mdbreact';\r\nimport API from '../utils/API';\r\nimport Slider from \"react-slick\";\r\n\r\n// const CardExample = () => {\r\nclass GameCard extends Component {\r\n    state = {\r\n      userName: \"\", \r\n      enrolledPlayers: \"\"\r\n      // isAdmin: true,\r\n    };\r\n\r\n  componentDidMount() {\r\n    this.loadEvents();\r\n    this.setState(\r\n      {\r\n        userName: sessionStorage.getItem(\"userName\")\r\n      })\r\n  };\r\n\r\n  loadEvents = () => {\r\n    API.getAllEvents()\r\n      .then(res =>\r\n        this.setState({ gameObj: res.data })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  loadEventsNplayers = () => {\r\n    API.getAllEvents()  \r\n      .then(res =>\r\n        this.setState({ gameObj: res.data })\r\n        .catch(err => console.log(err))\r\n        );\r\n        API.getPlayers(this.state.id)\r\n          .then(res =>\r\n            this.setState({ joinedPlayers : res.data})\r\n            )\r\n            .catch(err => console.log(err));\r\n            let joinedPlayers = this.state.joinedPlayers;\r\n            let listPlayers = joinedPlayers.join(\",\");\r\n            this.setState({joinedPlayers : listPlayers})\r\n   }\r\n\r\n  deleteEvent = id => {\r\n    API.deleteEvent(id)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  joinEvent = id => {\r\n    API.joinEvent(sessionStorage.getItem(\"token\").toString(), id )\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  joinEvent2 = id => {\r\n    API.joinEvent(sessionStorage.getItem(\"userName\"), id )\r\n      .then((response) => {\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  joinEvent3 = id => {\r\n    if (this.state.userName === this.props.creatorName) {\r\n      alert(\"Cannot join games which you created!\")\r\n      return;\r\n    };\r\n   var playerList = \"\";\r\n    playerList = this.props.enrolledPlayers;\r\n    if (playerList === null) {\r\n      API.joinEvent3( id , {\r\n        enrolledPlayers: this.state.userName\r\n      })\r\n        .then((response) => {\r\n          console.log(\"player added!\")\r\n          console.log(response);\r\n          window.location.reload();\r\n          return;\r\n        })\r\n    } else {\r\n\r\n      var splitList = playerList.split(\",\");\r\n      let i = 0;\r\n      for (i=0; i<=splitList.length; i++) {\r\n        if (this.state.userName === splitList[i])\r\n        {\r\n          alert(\"Cannot join games you have already joined!\");\r\n          return;\r\n        }\r\n      };\r\n      splitList.push(this.state.userName);\r\n      var newPlayerList = \"\";\r\n      newPlayerList = splitList.join(\",\");\r\n      if (splitList.length < (parseInt(this.props.maxPlayers))) {\r\n        API.joinEvent3( id , {\r\n          enrolledPlayers: newPlayerList\r\n        })\r\n        .then((response) => {\r\n          alert(\"player added!\")\r\n          console.log(response);\r\n          window.location.reload();\r\n        });\r\n      } else {\r\n        alert(\"Maximum players already reached.\")\r\n        return;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n  <div style={{display:\"inline-block\", textAlign:\"center\"}}>\r\n  \r\n  \r\n  <MDBCard className=\"text-black bg-light\" style={{ color: \"black\", display:\"inline-block\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\", backgroundImage:\r\n  \"url(https://image.freepik.com/free-vector/stylish-blue-medical-background-with-hexagon_1017-19373.jpg)\"}}>\r\n  <MDBCardBody>\r\n  <MDBCardTitle style={{ color: \"black\" }}>{this.props.eventTitle}</MDBCardTitle>\r\n            <MDBCardText style={{ color: \"white\" }}>\r\n            {this.props.gameName}<br /><br />\r\n            <span><p>Location: {this.props.location}</p></span><br />\r\n              {/* Created by:{CardExample.eventOwner}<br />c */}\r\n              Date/time:{this.props.dateTime}<br />\r\n              <span><p>Max Players: {this.props.maxPlayers}</p></span>\r\n              <span><p>Description: {this.props.description}</p></span>\r\n              {/* <span>Curerent players: {CardExample.signedInPlayers}</span> */}\r\n              Enrolled Players: {this.props.enrolledPlayers}<br />\r\n              Creator: {this.props.creatorName}\r\n            </MDBCardText>\r\n            \r\n            <MDBBtn color=\"red\" style={{ color: \"white\", borderRadius: \"10px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=>this.joinEvent3(this.props.id)}>Join</MDBBtn>\r\n            \r\n        {this.props.creatorName===this.state.userName && \r\n          <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\",borderRadius: \"10px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=> this.deleteEvent(this.props.id)} >Delete</MDBBtn>}\r\n          \r\n          \r\n            \r\n            </MDBCardBody>\r\n            </MDBCard>\r\n           \r\n            </div>\r\n            \r\n            )\r\n  }\r\n\r\n}\r\nexport default GameCard;\r\n\r\n\r\n\r\n// {this.props.isOwner ? (<MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" onClick={this.props.handleDelete}>Delete</MDBBtn>) : (\"\")}\r\n\r\n// {this.props.isOwner ? (<MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\" }} href=\"#\" onClick={this.props.handleEdit}>Edit</MDBBtn>) : (\"\")}","import React, { Component } from 'react';\r\nimport GameCard from \"./GameCard\";\r\nimport API from '../utils/API';\r\nimport Slider from \"react-slick\";\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\n\r\nexport default class Eventload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isOwner: true,\r\n            gorm: false,\r\n            grabbedGames: [],\r\n            hostedGames: [],\r\n            defaultGame: [{\r\n                id: \"0\",\r\n                eventTitle: \"none\",\r\n                description: \"none\",\r\n                capacity: \"none\",\r\n                location: \"none\"\r\n            }],\r\n            redirectPath: \"/dashboard\",\r\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\"),\r\n            userName: sessionStorage.getItem(\"userName\")\r\n        };\r\n        // this.loadRegistedGames();\r\n    }\r\n\r\n  componentDidMount() {\r\n    this.loadRegistedGames();\r\n  }\r\n\r\n    loadRegistedGames = () => {\r\n        API.getEvents()\r\n            .then((Response) => {\r\n                this.setState(\r\n                    {\r\n                        grabbedGames: Response.data,\r\n                        // gorm: true\r\n                    }\r\n                )\r\n                console.log(Response);\r\n                console.log(this.state.grabbedGames);\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n    }\r\n    render() {\r\n        const settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 150,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 1,\r\n            slidePerRow: 1,\r\n            centerMode: false,\r\n            width: \"300px\"\r\n        };\r\n        return (\r\n            <MDBContainer>\r\n            <MDBRow>\r\n            <MDBCol sm=\"3\">\r\n            </MDBCol>\r\n            <Slider {...settings} style={{width:\"450px\"}}>\r\n            \r\n         \r\n            {this.state.grabbedGames.map((data) =>\r\n                \r\n                <GameCard id={data.id} key={data.id} eventTitle={data.eventTitle} \r\n                gameName={data.gameName}   \r\n                description={data.description} location={data.location} maxPlayers={data.maxPlayers}\r\n                dateTime={data.dateTime} creatorName={data.creatorName} enrolledPlayers={data.enrolledPlayers}\r\n                />\r\n                \r\n                ) }\r\n                \r\n           \r\n                \r\n              \r\n                </Slider >\r\n                </MDBRow>\r\n                </MDBContainer>          \r\n                );\r\n            }\r\n        }\r\n","import React from 'react';\r\nimport { MDBContainer } from 'mdbreact';\r\nimport CreateModal from './CreateModal';\r\nimport Eventload from './eventload';\r\n// import GameCard from \"./GameCard\";\r\n// import API from '../utils/API';\r\n// import { Redirect } from \"react-router-dom\";\r\n\r\n\r\nconst DashBoard = ({ props }) => {\r\n    return (\r\n        <div>\r\n            <MDBContainer>\r\n                <div>\r\n                    <h1 className=\"text-white\" style={{ textAlign: \"center\" }}>\r\n                        Upcoming Games<br />\r\n                          <CreateModal />\r\n                    </h1>\r\n                            <Eventload />\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n            </MDBContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashBoard\r\n\r\n","import React, { Component } from \"react\";\r\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardHeader, MDBCardFooter, MDBCardImage, MDBBtn, MDBCol } from\r\n  \"mdbreact\";\r\nimport API from '../utils/API';\r\nimport CreateModal from './CreateModal';\r\n\r\n// const GamePanel = props => {\r\n\r\nclass GamePanel extends Component {\r\n  // state = {\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //   this.loadEvents();\r\n  // }\r\n\r\n  // loadEvents = () => {\r\n  //   API.getAllEvents()\r\n  //     .then(res =>\r\n  //       this.setState({ gameObj: res.data })\r\n  //     )\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // deleteEvent = id => {\r\n  //   API.deleteEvent(id)\r\n  //     .then(res => this.loadEvents())\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  // handleInputChange = event => {\r\n  //   const { name, value } = event.target;\r\n  //   this.setState({\r\n  //     [name]: value\r\n  //   });\r\n  // };\r\n\r\n\r\n  // componentDidMount() {\r\n  //   this.loadEvents();\r\n  // };\r\n\r\n  // loadEvents = () => {\r\n  //   API.getGames()\r\n  //     .then(res =>\r\n  //       this.setState({ gameObj: res.data })\r\n  //     )\r\n  //     .catch(err => console.log(err));\r\n  // };\r\n\r\n  deleteGame = id => {\r\n    API.deleteGame(id)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n       \r\n          <MDBCard style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\",backgroundImage:\r\n          \"url(https://previews.123rf.com/images/tashechka/tashechka1701/tashechka170100695/70080103-abstract-geometric-style-yellow-background-illustration-yellow-white-colors-.jpg)\" }} >\r\n            <MDBCardHeader color=\"#ffa726 orange lighten-1\">\r\n              {this.props.gameTitle}\r\n            </MDBCardHeader>\r\n            <MDBCardBody>\r\n              <MDBCardTitle>\r\n                <a href=\"`{this.props.gameUrl}`\" style={{fontSize: \"20px\", whiteSpace: \"nowrap\", color:\"black\" }}>\r\n                  {this.props.gameTitle}\r\n                </a>\r\n              </MDBCardTitle>\r\n              <MDBCardText style={{color:\"black\" }}>\r\n              {this.props.image===null ? (\r\n                <MDBCardImage className=\"img-fluid rounded mx-auto d-block\" src={this.props.image} style={{ height: \"80%\", width: \"80%\", borderRadius: \"25px\" }} />\r\n                ) : ( \r\n              <MDBCardImage className=\"img-fluid rounded mx-auto d-block\" src=\"http://ridleylibrary.org/wp-content/uploads/2018/02/games.jpg\" style={{ height: \"80%\", width: \"80%\", borderRadius: \"25px\" }} /> \r\n              )}\r\n                \r\n                <br />\r\n                {this.props.description}<br />\r\n              </MDBCardText>\r\n\r\n              <CreateModal />\r\n\r\n              <MDBBtn color=\"#1565c0 blue darken-3\" style={{ color: \"white\",borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 9px #000000)\" }} href=\"#\" onClick={() => this.deleteGame(this.props.id)} >Delete</MDBBtn>\r\n            </MDBCardBody>\r\n            <MDBCardFooter color=\"secondary-color\">\r\n            </MDBCardFooter>\r\n          </MDBCard>\r\n      \r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default GamePanel;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter, MDBInput } from 'mdbreact';\r\nimport API from '../utils/API';\r\nimport { number } from 'prop-types';\r\n\r\nclass GameModal extends Component {\r\n    state = {\r\n        modal1: false,\r\n        name: \"\",\r\n        description: \"\",\r\n        capacity: number,\r\n        picture: \"\"\r\n\r\n    }\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n    handleCreate = () => {\r\n        this.setState({ modal1: false });\r\n\r\n        API.saveGame({\r\n            gameName: this.state.name,\r\n            gameDescript: this.state.description,\r\n            maxOfPlayers: this.state.maxOfPlayers,\r\n            picture: this.state.picture,\r\n          })\r\n            .then((response) => {\r\n                // console.log(\"event created\");\r\n                // console.log(response);\r\n                window.location.reload();\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            })\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n\r\n    toggle = nr => () => {\r\n        let modalNumber = 'modal' + nr\r\n        this.setState({\r\n            [modalNumber]: !this.state[modalNumber]\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer style={{textAlign: \"center\"}}>\r\n                <div style={{ display: \"inline-block\"}}>\r\n\r\n                    <MDBBtn className=\"text-white\" color=\"#e65100 orange darken-4\" style={{color: \"white\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.toggle(1)}>Add Game</MDBBtn>\r\n\r\n                    <MDBModal isOpen={this.state.modal1} toggle={this.toggle(1)} size=\"lg\">\r\n                        <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={this.toggle(1)}>Create a board game</MDBModalHeader>\r\n                        <MDBModalBody>\r\n                            <div className=\"md-form\">\r\n                                <MDBInput\r\n                                    material\r\n                                    containerClassName=\"mb-2 mt-0\"\r\n                                    hint=\"Game Title\"\r\n                                    name=\"name\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    material\r\n                                    containerClassName=\"mb-2 mt-0\"\r\n                                    hint=\"Description\"\r\n                                    name=\"description\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    material\r\n                                    containerClassName=\"mb-2 mt-0\"\r\n                                    prepend=\"Capacity\"\r\n                                    hint=\"Maximum Number of People\"\r\n                                    name=\"capacity\"\r\n                                    type=\"number\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n\r\n                                <MDBInput\r\n                                    material\r\n                                    containerClassName=\"mb-2 mt-0\"\r\n                                    hint=\"Image URL\"\r\n                                    name=\"picture\"\r\n                                    onChange={this.handleInputChange}\r\n                                />\r\n                            </div>\r\n                        </MDBModalBody>\r\n                        <MDBModalFooter>\r\n                            <MDBBtn color=\"#01579b light-blue darken-4\" style={{ color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.toggle(1)}>Close</MDBBtn>\r\n                            <MDBBtn color=\"#e65100 orange darken-4\" style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.handleCreate}>Create</MDBBtn>\r\n                        </MDBModalFooter>\r\n                    </MDBModal>\r\n                </div>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameModal;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport GamePanel from \"./GamePanel\";\r\nimport API from '../utils/API';\r\nimport GameModal from './GameModal';\r\nimport Slider from \"react-slick\";\r\n\r\nexport default class FindGame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gamesToPlay: [],\r\n            redirectPath: \"/findgame\",\r\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\")\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n           this.loadGamesToPlay();\r\n    }\r\n    loadGamesToPlay = () => {\r\n        API.getGames()\r\n            .then((res) => {\r\n                this.setState(\r\n                    {\r\n                        gamesToPlay: res.data\r\n                    }\r\n                )\r\n                console.log(res);\r\n                console.log(this.state.gamesToPlay);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            speed: 150,\r\n            slidesToShow: 2,\r\n            slidesToScroll: 1,\r\n            slidePerRow: 1,\r\n            centerMode: false,\r\n            width: \"300px\"\r\n        };\r\n        return (\r\n           <div>\r\n                <div>\r\n                <GameModal />\r\n                </div>\r\n           \r\n           \r\n           <MDBContainer style={{textgAlign:\"center\"}}>\r\n            \r\n           <MDBRow>\r\n            <MDBCol sm=\"3\">\r\n            </MDBCol>\r\n            <Slider {...settings} style={{width:\"450px\"}} >\r\n            \r\n            {this.state.gamesToPlay.map((data) =>\r\n            (<GamePanel id={data.id} key={data.id} gameTitle={data.gameName} description={data.gameDescript} image={data.picture}  />))}\r\n                \r\n                \r\n                </Slider>\r\n                </MDBRow>\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                <br />\r\n                </MDBContainer>\r\n                \r\n                </div> \r\n                )\r\n            }\r\n        }\r\n\r\n","import React, { Component } from \"react\";\r\nimport { MDBCard, MDBBtn, MDBCardBody, MDBCardImage, MDBCardTitle, MDBCardText, MDBCol } from 'mdbreact';\r\nimport API from '../utils/API';\r\n\r\nclass NewsCard extends Component {\r\n  state = {\r\n\r\n  };\r\n\r\n  deleteNews = id => {\r\n    API.deleteNews(id)\r\n      .then((response) => {\r\n        window.location.reload();\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <MDBCol md=\"4\">\r\n        <MDBCard className=\"text-black bg-light\" style={{ textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(30px 30px 9px #000000)\" }}>\r\n        <br />\r\n          <a href={this.props.link}>\r\n            <MDBCardImage className=\"img-fluid rounded mx-auto d-block\" src={this.props.image}  style={{ height : \"80%\", width :   \"80%\", borderRadius: \"25px\"}} waves />\r\n          </a>\r\n         <MDBCardBody>\r\n            <MDBCardTitle>\r\n              <a href={this.props.link} style={{color: \"gray\" , fontSize: \"18px\"}}>\r\n                {this.props.gameTitle}\r\n              </a>\r\n            </MDBCardTitle>\r\n            <MDBCardText style={{color: \"black\", textAlign:\"left\"}}>\r\n              {this.props.summary}\r\n            </MDBCardText>\r\n            <MDBBtn color=\"#1565c0 blue darken-3\" style={{color:\"white\", borderRadius: \"8px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}}  href=\"#\" onClick={() => this.deleteNews(this.props.id)} >Delete</MDBBtn>\r\n          </MDBCardBody>\r\n        </MDBCard>\r\n      </MDBCol>\r\n    )\r\n  }\r\n}\r\nexport default NewsCard;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBRow , MDBCol, MDBBtn } from 'mdbreact';\r\nimport NewsCard from \"./NewsCard\";\r\nimport API from '../utils/API';\r\n\r\n\r\nexport default class DashBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            newsArticles: [],\r\n            redirectPath: \"/news\",\r\n            isLoggedIn: sessionStorage.getItem(\"isLoggedIn\")\r\n        };\r\n    }\r\n    componentDidMount = () => {\r\n        // this.handlesubmit();\r\n        this.loadNewsArticles();\r\n    }\r\n    loadNewsArticles = () => {\r\n        API.getNews ()\r\n            .then((Response) => {\r\n                this.setState(\r\n                    {\r\n                        newsArticles: Response.data\r\n                    }\r\n                )\r\n                console.log(Response);\r\n                console.log(this.state.newsArticles);\r\n\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error)\r\n            });\r\n\r\n    }\r\n\r\n    handlesubmit(event) {\r\n        console.log(\"scrape in progress\");\r\n        API.scrape()\r\n          .then((response) => {\r\n            console.log(response);\r\n            window.location.reload();\r\n            \r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBContainer>\r\n                <br />\r\n                <MDBRow>\r\n                <MDBCol>\r\n                    <div>\r\n                        <h1 className=\"text-white\" style= {{textAlign: \"center\"}}>\r\n                            Boardgames in the News<br />\r\n                            <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", textAlign: \"center\", margin: \"30px\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={this.handlesubmit}>Scrape</MDBBtn>\r\n                        </h1>\r\n                        <div className=\"d-flex flex-row flex-wrap\">\r\n                            {this.state.newsArticles.map((data) => \r\n                                (<NewsCard id={data.id} key={data.id} gameTitle={data.title} summary={data.summary} image={data.image} link={data.link} />))}\r\n                        </div>\r\n                    </div>\r\n                    </MDBCol>\r\n                    </ MDBRow>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                </MDBContainer>\r\n                {/* why is this part here?\r\n                    <Redirect to={this.state.redirectPath} />\r\n                */}\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { MDBBadge } from \"mdbreact\"\r\n\r\nexport default class GameTag extends Component {\r\n    delete = () => {\r\n        if (this.props.removable)\r\n        this.props.delete(this.props.index);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MDBBadge pill color=\"red\" onClick={this.delete}>{this.props.name}</MDBBadge>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { MDBBtn, MDBInput, MDBModalFooter, MDBModalHeader, MDBModalBody, MDBModal, MDBContainer} from \"mdbreact\";\r\nimport API from \"../utils/API\";\r\nimport GameTag from \"./GameTag\"\r\n\r\n\r\nexport default class UpdateProfileModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            updateModal: false,\r\n            image: \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\",\r\n            userName: this.props.userName,\r\n            gender: \"\",\r\n            introduction: \"\",\r\n            favorite: [],\r\n            gameItem: \"\"\r\n        }\r\n        this.selectGender = this.selectGender.bind(this);\r\n    }\r\n    componentDidMount = () => {\r\n        this.setState({favorite: this.props.gameArr});\r\n    }\r\n    modalToggle = () => {\r\n        let mod = \"updateModal\";\r\n        this.setState({ [mod]: !this.state[mod] });\r\n    }\r\n    selectGender = event => {\r\n        this.setState( {gender: event.target.value} );\r\n    }\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    deleteTag = index => {\r\n        let tempArr = this.state.favorite;\r\n        tempArr.splice(index, 1);\r\n        this.setState( {favorite: tempArr} );\r\n    }\r\n    addGame = () => {\r\n        if (this.state.gameItem) {\r\n            let tempArr = this.state.favorite;\r\n            tempArr.push(this.state.gameItem);\r\n            this.setState( {favorite: tempArr, gameItem: \"\"} );\r\n        }\r\n    }\r\n    handleUpdate = () => {\r\n        console.log(this.state);\r\n        this.modalToggle();\r\n        let profileObj = {\r\n            userName: this.props.userName,\r\n            userImage: this.state.image,\r\n            userGender: this.state.gender,\r\n            userIntro: this.state.introduction,\r\n            favoriteGames: JSON.stringify(this.state.favorite)\r\n        };\r\n        console.log(profileObj);\r\n        API.updateProfile(sessionStorage.getItem(\"token\"), profileObj).then(res => {\r\n            console.log(res);\r\n        }).catch(err => \r\n            console.log(err)\r\n        );\r\n        this.props.update(profileObj);\r\n    }\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBBtn className=\"text-white\" color=\"#d50000 red accent-4\" style={{ color: \"white\", borderRadius: \"30px\", filter: \"drop-shadow(10px 10px 9px #000000)\" }} href=\"#\" onClick={()=>this.modalToggle()}>Update </MDBBtn>\r\n\r\n                <MDBModal isOpen={this.state.updateModal} toggle={()=>this.modalToggle()} size=\"lg\">\r\n                    <MDBModalHeader style={{ textAlign: \"center\", color: \"black\" }} toggle={()=>this.modalToggle()}> Update Your Profile </MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        <MDBInput    \r\n                            className=\"mb-2 mt-0\"\r\n                            name=\"image\"\r\n                            hint=\"Input Image URL\"\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <select  \r\n                            className=\"mb-2 mt-0 browser-default custom-select\"\r\n                            name=\"gender\"\r\n                            onChange={this.selectGender}\r\n                            value={this.state.gender}\r\n                        >\r\n                            <option value=\"Unknown\">Choose your gender</option>\r\n                            <option value=\"Male\">Male</option>\r\n                            <option value=\"Female\">Female</option>\r\n                        </select> \r\n                        <MDBInput    \r\n                            className=\"mb-2 mt-0\"\r\n                            name=\"introduction\"\r\n                            hint=\"Introduce yourself\"\r\n                            type=\"text\"\r\n                            onChange={this.handleInputChange}\r\n                        />\r\n                        <div className=\"mb-2 mt-0\">\r\n                            <MDBInput className=\"\" name=\"gameItem\" hint=\"Name of Games You Like\" onChange={this.handleInputChange} value={this.state.gameItem}/>\r\n                            <MDBBtn color=\"red\" className=\"\"  style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={this.addGame}>ADD</MDBBtn>\r\n                            {console.log(this.state.favorite)}\r\n                            {console.log(this.props.gameArr)}\r\n                            {this.state.favorite.map((element, index) => (\r\n                                <GameTag name={element} color=\"#01579b light-blue darken-4\" index={index} delete={this.deleteTag} key={index} removable={true}/>\r\n                            ))}\r\n                        </div>\r\n                        \r\n                    </MDBModalBody>\r\n\r\n                    <MDBModalFooter style={{textAlign:\"center\"}}>\r\n                        <MDBBtn color=\"#01579b light-blue darken-4\"  style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}}  onClick={() =>this.modalToggle()}>Close</MDBBtn>\r\n                        <MDBBtn color=\"#d50000 red accent-4\" style={{color:\"white\", borderRadius: \"10px\", filter: \"drop-shadow(5px 5px 5px #000000)\"}} onClick={()=>this.handleUpdate()}>Confirm</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport { MDBContainer, MDBRow, MDBCol } from 'mdbreact';\r\nimport API from \"../utils/API\"\r\nimport UpdateProfileModal from \"./UpdateProfileModal\";\r\nimport GameTag from \"./GameTag\"\r\n// import { Redirect, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      image: \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\",\r\n      userName: \"\",\r\n      gender: \"\",\r\n      introduction: \"\",\r\n      favorite: []\r\n    };\r\n    this.updateProfileState = this.updateProfileState.bind(this);\r\n    // this.loadProfile();\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.loadProfile();\r\n  }\r\n\r\n  updateProfileState = userData => {\r\n    console.log(userData);\r\n    this.setState( {image: userData.userImage } );\r\n    this.setState( {userName: userData.userName} );\r\n    this.setState( {gender: userData.userGender} );\r\n    this.setState( {introduction: userData.userIntro} );\r\n    this.setState( {favorite: JSON.parse(userData.favoriteGames)} );\r\n  }\r\n\r\n  loadProfile() {\r\n    API.getProfile(sessionStorage.getItem(\"token\"))\r\n    .then(response =>{\r\n      console.log(\"user data:\",response.data);\r\n      this.updateProfileState(response.data);\r\n    }).catch(\r\n      err => console.log(err)\r\n    );\r\n  }\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <MDBContainer>\r\n        <h2 className=\"h1-responsive font-weight-bold text-center my-5 text-white\">Profile</h2>\r\n        <MDBRow>\r\n          <MDBCol sm=\"4\">\r\n            <img src={this.state.image || \"https://png.pngtree.com/svg/20161212/f93e57629c.svg\"} width=\"200\" alt =\"logo\" style={{ borderRadius: \"20px\", filter: \"drop-shadow(10px 10px 5px #000000)\"}}/>\r\n          </MDBCol>\r\n          <MDBCol sm=\"8\">\r\n            <MDBRow>\r\n              <MDBCol sm=\"6\">\r\n                <p className=\"pb-5 text-white\">Username: {this.state.userName || \"Unknown\"}</p>\r\n              </MDBCol>\r\n              <MDBCol sm=\"6\">\r\n                <p className=\"pb-5 text-white\">Gender: {this.state.gender || \"Unknown\"}</p>\r\n              </MDBCol>\r\n            </MDBRow>\r\n            <p className=\"pb-5 text-white\">Favorite Boardgames: {this.state.favorite ? this.state.favorite.map((element, index) => (\r\n               <GameTag name={element} color=\"#0d47a1\" key={index} removable={false}/>\r\n             )): \"Unknown\"}</p>\r\n            <p className=\"pb-5 text-white\">About me: {this.state.introduction || \"User has no information yet!\"}</p>\r\n          </MDBCol>\r\n        </MDBRow>\r\n        <UpdateProfileModal  userName={this.state.userName} update={this.updateProfileState} gameArr={this.state.favorite}/>\r\n\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </MDBContainer>\r\n\r\n\r\n      \r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Login from \"./components/Login\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport Dashboard from \"./components/DashBoard\";\r\nimport FindGame from \"./components/FindGame\";\r\nimport News from \"./components/News\";\r\nimport Profile from \"./components/Profile\";\r\n\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n// import Routes from \"./Routes\";\r\n\r\n  class App extends Component {\r\n  state = {\r\n    isLoggedIn: sessionStorage.getItem(\"isLoggedIn\"),\r\n    userName: sessionStorage.getItem(\"userName\")\r\n  };\r\n  logIn = () => {\r\n    this.setState({isLoggedIn: true});\r\n  }\r\n  logOut = () => {\r\n    this.setState({isLoggedIn: false});\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <div style={{\r\n          backgroundImage:\r\n            \"url(https://i.ibb.co/BVy8Qwt/bluebb.jpg)\",\r\n       \r\n        }}>\r\n          <Navbar isLoggedIn={this.state.isLoggedIn} handleLogOut={this.logOut}/>\r\n          <Switch>\r\n           \r\n              <Route exact path=\"/\" render={() => <Login handleLogIn={this.logIn} />} />\r\n              <Route exact path=\"/signUp\"render={() => <SignUp handleLogIn={this.logIn}/>} />\r\n              <Route exact path=\"/dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/find-game\" component={FindGame} />\r\n              <Route exact path=\"/news\" component={News} />\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n\r\n              \r\n         \r\n          </Switch>\r\n\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport \"./index.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( <App /> , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}